From 6a09c66f8c046d7d366a8826b410731c46003460 Mon Sep 17 00:00:00 2001
In-Reply-To: <20181101193115.32681-1-avarab@gmail.com>
References: <20181101193115.32681-1-avarab@gmail.com>
From: =?UTF-8?q?=C3=86var=20Arnfj=C3=B6r=C3=B0=20Bjarmason?=
 <avarab@gmail.com>
Date: Thu, 8 Nov 2018 20:31:22 +0000
Subject: [PATCH v4 0/2] *** SUBJECT HERE ***
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

*** BLURB HERE ***

Junio C Hamano (1):
  Makefile: ease dynamic-gettext-poison transition

Ævar Arnfjörð Bjarmason (1):
  i18n: make GETTEXT_POISON a runtime option

 .travis.yml               |  2 +-
 Makefile                  |  8 +-------
 ci/lib-travisci.sh        |  4 ++--
 gettext.c                 | 11 +++++++----
 gettext.h                 |  9 +++------
 git-sh-i18n.sh            |  2 +-
 po/README                 | 13 ++++---------
 t/README                  |  6 ++++++
 t/lib-gettext.sh          |  2 +-
 t/t0000-basic.sh          |  2 +-
 t/t0205-gettext-poison.sh |  8 +++++---
 t/t3406-rebase-message.sh |  2 +-
 t/t7201-co.sh             |  6 +++---
 t/t9902-completion.sh     |  3 ++-
 t/test-lib-functions.sh   |  8 ++++----
 t/test-lib.sh             | 22 +++++++++++++++++-----
 16 files changed, 59 insertions(+), 49 deletions(-)

Range-diff:
  -:  ---------- >   1:  55071ea248 rebase: start implementing it as a builtin
  -:  ---------- >   2:  c7b64aa0f3 rebase: refactor common shell functions into their own file
  -:  ---------- >   3:  ac7f467fef builtin/rebase: support running "git rebase <upstream>"
  -:  ---------- >   4:  44b776c3e9 sequencer: make three functions and an enum from sequencer.c public
  -:  ---------- >   5:  145e05ac44 rebase -i: rewrite append_todo_help() in C
  -:  ---------- >   6:  2aed01811d editor: add a function to launch the sequence editor
  -:  ---------- >   7:  64a43cbd5d rebase -i: rewrite the edit-todo functionality in C
  -:  ---------- >   8:  34bec2c458 sequencer: add a new function to silence a command, except if it fails
  -:  ---------- >   9:  2c58483a59 rebase -i: rewrite setup_reflog_action() in C
  -:  ---------- >  10:  4df66c40b0 rebase -i: rewrite checkout_onto() in C
  -:  ---------- >  11:  a9f5476fbc sequencer: refactor append_todo_help() to write its message to a buffer
  -:  ---------- >  12:  d4ed5d7713 sequencer: change the way skip_unnecessary_picks() returns its result
  -:  ---------- >  13:  d078c39106 t3404: todo list with commented-out commands only aborts
  -:  ---------- >  14:  b97e187364 rebase -i: rewrite complete_action() in C
  -:  ---------- >  15:  91f0d95dcb rebase -i: remove unused modes and functions
  -:  ---------- >  16:  6ab54d17be rebase -i: implement the logic to initialize $revisions in C
  -:  ---------- >  17:  f22e4e1a3c rebase -i: rewrite the rest of init_revisions_and_shortrevisions() in C
  -:  ---------- >  18:  65850686cf rebase -i: rewrite write_basic_state() in C
  -:  ---------- >  19:  d59cd14de8 rebase -i: rewrite init_basic_state() in C
  -:  ---------- >  20:  f28d40d3a9 builtin rebase: support --onto
  -:  ---------- >  21:  075bc8527c builtin rebase: support `git rebase --onto A...B`
  -:  ---------- >  22:  06e4775a8c builtin rebase: handle the pre-rebase hook and --no-verify
  -:  ---------- >  23:  b4c8eb024a builtin rebase: support --quiet
  -:  ---------- >  24:  bff014dac7 builtin rebase: support the `verbose` and `diffstat` options
  -:  ---------- >  25:  e0333e5c63 builtin rebase: require a clean worktree
  -:  ---------- >  26:  9a48a615b4 builtin rebase: try to fast forward when possible
  -:  ---------- >  27:  1ed9c14ff2 builtin rebase: support --force-rebase
  -:  ---------- >  28:  c54dacb50e builtin rebase: start a new rebase only if none is in progress
  -:  ---------- >  29:  d4c569f8f4 builtin rebase: only store fully-qualified refs in `options.head_name`
  -:  ---------- >  30:  e65123a71d builtin rebase: support `git rebase <upstream> <switch-to>`
  -:  ---------- >  31:  f95736288a builtin rebase: support --continue
  -:  ---------- >  32:  122420c295 builtin rebase: support --skip
  -:  ---------- >  33:  5e5d96197c builtin rebase: support --abort
  -:  ---------- >  34:  5a61494539 builtin rebase: support --quit
  -:  ---------- >  35:  51e9ea6da7 builtin rebase: support --edit-todo and --show-current-patch
  -:  ---------- >  36:  d732a57078 builtin rebase: actions require a rebase in progress
  -:  ---------- >  37:  0eabf4b95c builtin rebase: stop if `git am` is in progress
  -:  ---------- >  38:  361badd393 builtin rebase: allow selecting the rebase "backend"
  -:  ---------- >  39:  73d51ed0a5 builtin rebase: support --signoff
  -:  ---------- >  40:  ead98c111b builtin rebase: support --rerere-autoupdate
  -:  ---------- >  41:  38dbcef26e builtin rebase: support --committer-date-is-author-date
  -:  ---------- >  42:  99d8cc7ce8 builtin rebase: support `ignore-whitespace` option
  -:  ---------- >  43:  53f9e5be94 builtin rebase: support `ignore-date` option
  -:  ---------- >  44:  002ee2fe68 builtin rebase: support `keep-empty` option
  -:  ---------- >  45:  051910a956 builtin rebase: support `--autosquash`
  -:  ---------- >  46:  53bbcfbde7 rebase -i: implement the main part of interactive rebase as a builtin
  -:  ---------- >  47:  0af129b2ed rebase--interactive2: rewrite the submodes of interactive rebase in C
  -:  ---------- >  48:  cf808208ec rebase -i: remove git-rebase--interactive.sh
  -:  ---------- >  49:  34b47315d9 rebase -i: move rebase--helper modes to rebase--interactive
  -:  ---------- >  50:  12026a412c builtin rebase: support `--gpg-sign` option
  -:  ---------- >  51:  7998dbe1ec builtin rebase: support `-C` and `--whitespace=<type>`
  -:  ---------- >  52:  6defce2b02 builtin rebase: support `--autostash` option
  -:  ---------- >  53:  68e46d7868 builtin rebase: support `--exec`
  -:  ---------- >  54:  9b3a448b4e builtin rebase: support `--allow-empty-message` option
  -:  ---------- >  55:  3c3588c7d3 builtin rebase: support --rebase-merges[=[no-]rebase-cousins]
  -:  ---------- >  56:  103148aad8 merge-base --fork-point: extract libified function
  -:  ---------- >  57:  92d0d74e8d builtin rebase: support `fork-point` option
  -:  ---------- >  58:  ba1905a5fe builtin rebase: add support for custom merge strategies
  -:  ---------- >  59:  9dba809a69 builtin rebase: support --root
  -:  ---------- >  60:  8f5986d95a builtin rebase: optionally auto-detect the upstream
  -:  ---------- >  61:  fa443d40b1 builtin rebase: optionally pass custom reflogs to reset_head()
  -:  ---------- >  62:  7eecfa5601 builtin rebase: fast-forward to onto if it is a proper descendant
  -:  ---------- >  63:  cda614e489 builtin rebase: show progress when connected to a terminal
  -:  ---------- >  64:  3dba9d0884 builtin rebase: use no-op editor when interactive is "implied"
  -:  ---------- >  65:  b361bd754d builtin rebase: error out on incompatible option/mode combinations
  -:  ---------- >  66:  bc24382c2b builtin rebase: prepare for builtin rebase -i
  -:  ---------- >  67:  5541bd5b8f rebase: default to using the builtin rebase
  -:  ---------- >  68:  f240918d2b rebase: fix typoes in error messages
  -:  ---------- >  69:  b8c0b2100b rebase -i: clarify what happens on a failed `exec`
  -:  ---------- >  70:  71f82465b1 rebase -i: introduce the 'break' command
  -:  ---------- >  71:  21084e84a4 http: add support for selecting SSL backends at runtime
  -:  ---------- >  72:  e0a862fdaf submodule helper: convert relative URL to absolute URL if needed
  -:  ---------- >  73:  2b168ef3ff merge-recursive: improve auto-merging messages with path collisions
  -:  ---------- >  74:  4f44545313 merge-recursive: avoid showing conflicts with merge branch before HEAD
  -:  ---------- >  75:  0b9333ff3e upload-pack: make have_obj not global
  -:  ---------- >  76:  1d1243fe63 upload-pack: make want_obj not global
  -:  ---------- >  77:  d1035cac09 upload-pack: clear flags before each v2 request
  -:  ---------- >  78:  6245b98b0e submodule.c: remove some of the_repository references
  -:  ---------- >  79:  b42ad7d57d read-cache: use of memory after it is freed
  -:  ---------- >  80:  da6cf1b336 gpg-interface.c: detect and reject multiple signatures on commits
  -:  ---------- >  81:  276b49ff34 completion: fix __gitcomp_builtin no longer consider extra options
  -:  ---------- >  82:  0b11a84e1b gpg-interface.c: use flags to determine key/signer info presence
  -:  ---------- >  83:  3daaaabe7e gpg-interface.c: support getting key fingerprint via %GF format
  -:  ---------- >  84:  4de9394dcb gpg-interface.c: obtain primary key fingerprint as well
  -:  ---------- >  85:  71064e6008 rebase (autostash): avoid duplicate call to state_dir_path()
  -:  ---------- >  86:  12aeb00a22 rebase (autostash): store the full OID in <state-dir>/autostash
  -:  ---------- >  87:  b98e914e46 rebase (autostash): use an explicit OID to apply the stash
  -:  ---------- >  88:  8dd9b3f85a send-email: explicitly disable authentication
  -:  ---------- >  89:  368a89124c Documentation/git-log.txt: do not show --exclude-promisor-objects
  -:  ---------- >  90:  669b1d2aae exclude-promisor-objects: declare when option is allowed
  -:  ---------- >  91:  7bf1983886 mingw: factor out code to set stat() data
  -:  ---------- >  92:  d75e697353 mingw: replace MSVCRT's fstat() with a Win32-based implementation
  -:  ---------- >  93:  d7e8c87421 mingw: implement nanosecond-precision file times
  -:  ---------- >  94:  97bd162ca2 rebase --autostash: demonstrate a problem with dirty submodules
  -:  ---------- >  95:  ffae8b2f90 rebase --autostash: fix issue with dirty submodules
  -:  ---------- >  96:  328a435182 repack: point out a bug handling stale shallow info
  -:  ---------- >  97:  2588f6ed8b shallow: offer to prune only non-existing entries
  -:  ---------- >  98:  5dcfbf564c repack -ad: prune the list of shallow commits
  -:  ---------- >  99:  00436bf1b1 archive: initialize archivers earlier
  -:  ---------- > 100:  3a4a4cab3e rebase -i: recognize short commands without arguments
  -:  ---------- > 101:  93aef7c79b http: add support for disabling SSL revocation checks in cURL
  -:  ---------- > 102:  b67d40adbb http: when using Secure Channel, ignore sslCAInfo by default
  -:  ---------- > 103:  d6b1d3b2d1 http: give curl version warnings consistently
  -:  ---------- > 104:  3063477445 path.c: char is not (always) signed
  -:  ---------- > 105:  32ee384be8 travis-ci: no longer use containers
  -:  ---------- > 106:  4af5174168 sequencer: cleanup for gcc warning in non developer mode
  -:  ---------- > 107:  8c64bc9420 t3404-rebase-interactive: test abbreviated commands
  -:  ---------- > 108:  813fc4410c fetch-object.h: add missing declaration (hdr-check)
  -:  ---------- > 109:  3a457a08f2 ewok_rlw.h: add missing 'inline' to function definition
  -:  ---------- > 110:  1406725b88 commit-reach.h: add missing declarations (hdr-check)
  -:  ---------- > 111:  a5f52c6dab test-lib: introduce the '-V' short option for '--verbose-log'
  -:  ---------- > 112:  b17ca8f94d rebase: apply cocci patch
  -:  ---------- > 113:  d582ea202b Eighth batch for 2.20
  -:  ---------- > 114:  8858448bb4 Ninth batch for 2.20
  1:  cc24ba8de8 ! 115:  677ad1c175 i18n: make GETTEXT_POISON a runtime option
    @@ -34,11 +34,11 @@
     
         Notes on the implementation:
     
    -     * We still compile a dedicated GETTEXT_POISON build in Travis CI.
    -       This is probably the wrong thing to do and should be followed-up
    -       with something similar to ae59a4e44f ("travis: run tests with
    -       GIT_TEST_SPLIT_INDEX", 2018-01-07) to re-use an existing test setup
    -       for running in the GIT_TEST_GETTEXT_POISON mode.
    +     * We still compile a dedicated GETTEXT_POISON build in Travis
    +       CI. Perhaps this should be revisited and integrated into the
    +       "linux-gcc" build, see ae59a4e44f ("travis: run tests with
    +       GIT_TEST_SPLIT_INDEX", 2018-01-07) for prior art in that area. Then
    +       again maybe not, see [2].
     
          * We now skip a test in t0000-basic.sh under
            GIT_TEST_GETTEXT_POISON=YesPlease that wasn't skipped before. This
    @@ -56,12 +56,22 @@
            so we populate the "poison_requested" variable in a codepath that's
            won't suffer from that race condition.
     
    -    See also [3] for more on the motivation behind this patch, and the
    +     * We error out in the Makefile if you're still saying
    +       GETTEXT_POISON=YesPlease to prompt users to change their
    +       invocation.
    +
    +     * We should not print out poisoned messages during the test
    +       initialization itself to keep it more readable, so the test library
    +       hides the variable if set in $GIT_TEST_GETTEXT_POISON_ORIG during
    +       setup. See [3].
    +
    +    See also [4] for more on the motivation behind this patch, and the
         history of the GETTEXT_POISON facility.
     
         1. https://public-inbox.org/git/871s8gd32p.fsf@evledraar.gmail.com/
    -    2. https://public-inbox.org/git/87woq7b58k.fsf@evledraar.gmail.com/
    -    3. https://public-inbox.org/git/878t2pd6yu.fsf@evledraar.gmail.com/
    +    2. https://public-inbox.org/git/20181102163725.GY30222@szeder.dev/
    +    3. https://public-inbox.org/git/20181022202241.18629-2-szeder.dev@gmail.com/
    +    4. https://public-inbox.org/git/878t2pd6yu.fsf@evledraar.gmail.com/
     
         Signed-off-by: Ævar Arnfjörð Bjarmason <avarab@gmail.com>
     
    @@ -181,7 +191,7 @@
      #else
      static inline void git_setup_gettext(void)
      {
    -+	use_gettext_poison();; /* getenv() reentrancy paranoia */
    ++	use_gettext_poison(); /* getenv() reentrancy paranoia */
      }
      static inline int gettext_width(const char *s)
      {
    @@ -392,8 +402,32 @@
      --- a/t/test-lib.sh
      +++ b/t/test-lib.sh
     @@
    + TZ=UTC
    + export LANG LC_ALL PAGER TZ
    + EDITOR=:
    ++
    ++# GIT_TEST_GETTEXT_POISON should not influence git commands executed
    ++# during initialization of test-lib and the test repo. Back it up,
    ++# unset and then restore after initialization is finished.
    ++if test -n "$GIT_TEST_GETTEXT_POISON"
    ++then
    ++	GIT_TEST_GETTEXT_POISON_ORIG=$GIT_TEST_GETTEXT_POISON
    ++	unset GIT_TEST_GETTEXT_POISON
    ++fi
    ++
    + # A call to "unset" with no arguments causes at least Solaris 10
    + # /usr/xpg4/bin/sh and /bin/ksh to bail out.  So keep the unsets
    + # deriving from the command substitution clustered with the other
    +@@
    + test -n "$USE_LIBPCRE2" && test_set_prereq LIBPCRE2
      test -z "$NO_GETTEXT" && test_set_prereq GETTEXT
      
    ++if test -n "$GIT_TEST_GETTEXT_POISON_ORIG"
    ++then
    ++	GIT_GETTEXT_POISON=$GIT_TEST_GETTEXT_POISON_ORIG
    ++	unset GIT_TEST_GETTEXT_POISON_ORIG
    ++fi
    ++
      # Can we rely on git's output in the C locale?
     -if test -n "$GETTEXT_POISON"
     +if test -z "$GIT_TEST_GETTEXT_POISON"
  -:  ---------- > 116:  6a09c66f8c Makefile: ease dynamic-gettext-poison transition
-- 
2.19.1.930.g4563a0d9d0

