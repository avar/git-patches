From bcbb20f081847c7b3e31af03d8dc1b113e60181c Mon Sep 17 00:00:00 2001
From: Erik Faye-Lund <kusmabite@gmail.com>
Date: Tue, 28 Sep 2010 18:05:26 +0200
Subject: [PATCH/RFC 2/2] gettext: use libcharset when available
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

libcharset provides an even more portable way of quering the charset
of the current locale.

Use that instead of nl_langinfo unless NO_LIBCHARSET is set.

Signed-off-by: Erik Faye-Lund <kusmabite@gmail.com>
Signed-off-by: Ævar Arnfjörð Bjarmason <avarab@gmail.com
---
 Makefile     |   17 +++++++++++++++++
 configure.ac |    6 ++++++
 gettext.c    |    8 ++++++++
 3 files changed, 31 insertions(+), 0 deletions(-)

diff --git a/Makefile b/Makefile
index 680e578..42b8cbe 100644
--- a/Makefile
+++ b/Makefile
@@ -43,6 +43,12 @@ all::
 # on platforms where we don't expect glibc (Linux, Hurd,
 # GNU/kFreeBSD), which includes libintl.
 #
+# Define NO_LIBCHARSET if you haven't set NO_GETTEXT and you can trust
+# the langinfo.h's nl_langinfo(CODESET) function to return the current
+# character set. At least Windows, OpenBSD and NetBSD need this
+# defined, since they need to use libcharset.h's locale_charset()
+# instead.
+#
 # Define GNU_GETTEXT if you're using the GNU implementation of
 # libintl. We define this everywhere except on Solaris, which has its
 # own gettext implementation. If GNU_GETTEXT is set we'll use GNU
@@ -792,6 +798,10 @@ ifndef NO_GETTEXT
 	# Systems that don't use GNU gettext are the exception. Only
 	# Solaris has a mature non-GNU gettext implementation.
 	GNU_GETTEXT = YesPlease
+
+	# Since we assume a GNU gettext by default we also assume a
+	# GNU-like langinfo.h by default
+	NO_LIBCHARSET = YesPlease
 endif
 
 # We choose to avoid "if .. else if .. else .. endif endif"
@@ -1180,6 +1190,9 @@ ifneq (,$(wildcard ../THIS_IS_MSYSGIT))
 	EXTLIBS += /mingw/lib/libz.a
 	NO_R_TO_GCC_LINKER = YesPlease
 	INTERNAL_QSORT = YesPlease
+ifndef NO_GETTEXT
+	NO_LIBCHARSET =
+endif
 else
 	NO_CURL = YesPlease
 endif
@@ -1964,6 +1977,10 @@ config.s config.o: EXTRA_CPPFLAGS = -DETC_GITCONFIG='"$(ETC_GITCONFIG_SQ)"'
 
 http.s http.o: EXTRA_CPPFLAGS = -DGIT_HTTP_USER_AGENT='"git/$(GIT_VERSION)"'
 
+ifdef NO_LIBCHARSET
+gettext.s gettext.o: EXTRA_CPPFLAGS = -DNO_LIBCHARSET
+endif
+
 ifdef NO_EXPAT
 http-walker.s http-walker.o: EXTRA_CPPFLAGS = -DNO_EXPAT
 endif
diff --git a/configure.ac b/configure.ac
index 1821d89..d3139cd 100644
--- a/configure.ac
+++ b/configure.ac
@@ -810,6 +810,12 @@ AC_CHECK_HEADER([libintl.h],
 [NO_GETTEXT=YesPlease])
 AC_SUBST(NO_GETTEXT)
 #
+# Define NO_LIBCHARSET if you don't have libcharset.h
+AC_CHECK_HEADER([libcharset.h],
+[NO_LIBCHARSET=],
+[NO_LIBCHARSET=YesPlease])
+AC_SUBST(NO_LIBCHARSET)
+#
 # Define NO_STRCASESTR if you don't have strcasestr.
 GIT_CHECK_FUNC(strcasestr,
 [NO_STRCASESTR=],
diff --git a/gettext.c b/gettext.c
index d20bb39..902268c 100644
--- a/gettext.c
+++ b/gettext.c
@@ -1,7 +1,11 @@
 #include "exec_cmd.h"
 #include <locale.h>
 #include <libintl.h>
+#ifndef NO_LIBCHARSET
+#include <libcharset.h>
+#else
 #include <langinfo.h>
+#endif
 #include <stdlib.h>
 
 extern void git_setup_gettext(void) {
@@ -20,7 +24,11 @@ extern void git_setup_gettext(void) {
 
 	(void)setlocale(LC_MESSAGES, "");
 	(void)setlocale(LC_CTYPE, "");
+#ifndef NO_LIBCHARSET
+	charset = locale_charset();
+#else
 	charset = nl_langinfo(CODESET);
+#endif
 	(void)bind_textdomain_codeset("git", charset);
 	(void)setlocale(LC_CTYPE, "C");
 	(void)textdomain("git");
-- 
1.7.3.159.g610493

