From 2e3ed8061d5bac1dccd9852edf45f26b6c96bb5c Mon Sep 17 00:00:00 2001
Message-Id: <patch-1.9-2e3ed8061d5-20210902T155617Z-avarab@gmail.com>
In-Reply-To: <cover-0.9-00000000000-20210902T155617Z-avarab@gmail.com>
References: <cover-0.9-00000000000-20210902T155617Z-avarab@gmail.com>
From: =?UTF-8?q?=C3=86var=20Arnfj=C3=B6r=C3=B0=20Bjarmason?=
 <avarab@gmail.com>
Date: Thu, 2 Sep 2021 17:07:59 +0200
Subject: [PATCH 1/9] git-sh-setup: remove unused set_reflog_action() function
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Remove the set_reflog_action() function last used in the
git-legacy-rebase.sh script removed in d03ebd411c6 (rebase: remove the
rebase.useBuiltin setting, 2019-03-18).

When the documentation I'm removing from git.txt was added in
c3e2d18996e (setup_reflog_action: document the rules for using
GIT_REFLOG_ACTION, 2013-06-19) we had git-pull.sh, git-am.sh and
git-rebase.sh using this in-tree, an addition to various example
scripts later removed in 49eb8d39c78 (Remove contrib/examples/*,
2018-03-25).

Since this part of the documentation was aimed at those writing
scripts in git.git we're long past the point where we should remove
it, this still leaves the description of the GIT_REFLOG_ACTION
variable.

Signed-off-by: Ævar Arnfjörð Bjarmason <avarab@gmail.com>
---
 Documentation/git-sh-setup.txt |  7 ------
 Documentation/git.txt          |  4 ----
 git-sh-setup.sh                | 42 ----------------------------------
 3 files changed, 53 deletions(-)

diff --git a/Documentation/git-sh-setup.txt b/Documentation/git-sh-setup.txt
index 8632612c31d..1ae15905492 100644
--- a/Documentation/git-sh-setup.txt
+++ b/Documentation/git-sh-setup.txt
@@ -40,13 +40,6 @@ die::
 usage::
 	die with the usage message.
 
-set_reflog_action::
-	Set `GIT_REFLOG_ACTION` environment to a given string (typically
-	the name of the program) unless it is already set.  Whenever
-	the script runs a `git` command that updates refs, a reflog
-	entry is created using the value of this string to leave the
-	record of what command updated the ref.
-
 git_editor::
 	runs an editor of user's choice (GIT_EDITOR, core.editor, VISUAL or
 	EDITOR) on a given file, but error out if no editor is specified
diff --git a/Documentation/git.txt b/Documentation/git.txt
index 6dd241ef838..38bc1403313 100644
--- a/Documentation/git.txt
+++ b/Documentation/git.txt
@@ -857,10 +857,6 @@ for full details.
 	track of the reason why the ref was updated (which is
 	typically the name of the high-level command that updated
 	the ref), in addition to the old and new values of the ref.
-	A scripted Porcelain command can use set_reflog_action
-	helper function in `git-sh-setup` to set its name to this
-	variable when it is invoked as the top level command by the
-	end user, to be recorded in the body of the reflog.
 
 `GIT_REF_PARANOIA`::
 	If set to `1`, include broken or badly named refs when iterating
diff --git a/git-sh-setup.sh b/git-sh-setup.sh
index 10d97641856..ee6935ca455 100644
--- a/git-sh-setup.sh
+++ b/git-sh-setup.sh
@@ -106,48 +106,6 @@ $LONG_USAGE")"
 	esac
 fi
 
-# Set the name of the end-user facing command in the reflog when the
-# script may update refs.  When GIT_REFLOG_ACTION is already set, this
-# will not overwrite it, so that a scripted Porcelain (e.g. "git
-# rebase") can set it to its own name (e.g. "rebase") and then call
-# another scripted Porcelain (e.g. "git am") and a call to this
-# function in the latter will keep the name of the end-user facing
-# program (e.g. "rebase") in GIT_REFLOG_ACTION, ensuring whatever it
-# does will be record as actions done as part of the end-user facing
-# operation (e.g. "rebase").
-#
-# NOTE NOTE NOTE: consequently, after assigning a specific message to
-# GIT_REFLOG_ACTION when calling a "git" command to record a custom
-# reflog message, do not leave that custom value in GIT_REFLOG_ACTION,
-# after you are done.  Other callers of "git" commands that rely on
-# writing the default "program name" in reflog expect the variable to
-# contain the value set by this function.
-#
-# To use a custom reflog message, do either one of these three:
-#
-# (a) use a single-shot export form:
-#     GIT_REFLOG_ACTION="$GIT_REFLOG_ACTION: preparing frotz" \
-#         git command-that-updates-a-ref
-#
-# (b) save the original away and restore:
-#     SAVED_ACTION=$GIT_REFLOG_ACTION
-#     GIT_REFLOG_ACTION="$GIT_REFLOG_ACTION: preparing frotz"
-#     git command-that-updates-a-ref
-#     GIT_REFLOG_ACITON=$SAVED_ACTION
-#
-# (c) assign the variable in a subshell:
-#     (
-#         GIT_REFLOG_ACTION="$GIT_REFLOG_ACTION: preparing frotz"
-#         git command-that-updates-a-ref
-#     )
-set_reflog_action() {
-	if [ -z "${GIT_REFLOG_ACTION:+set}" ]
-	then
-		GIT_REFLOG_ACTION="$*"
-		export GIT_REFLOG_ACTION
-	fi
-}
-
 git_editor() {
 	if test -z "${GIT_EDITOR:+set}"
 	then
-- 
2.33.0.814.gb82868f05f3

