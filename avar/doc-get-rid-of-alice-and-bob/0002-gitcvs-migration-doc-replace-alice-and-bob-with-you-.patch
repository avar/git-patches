From 39e8654507c07803eb87c20aba65cdb6dad302de Mon Sep 17 00:00:00 2001
Message-Id: <patch-2.6-39e8654507c-20210615T161330Z-avarab@gmail.com>
In-Reply-To: <cover-0.6-00000000000-20210615T161330Z-avarab@gmail.com>
References: <cover-0.6-00000000000-20210615T161330Z-avarab@gmail.com>
From: =?UTF-8?q?=C3=86var=20Arnfj=C3=B6r=C3=B0=20Bjarmason?=
 <avarab@gmail.com>
Date: Tue, 15 Jun 2021 17:25:20 +0200
Subject: [PATCH 2/6] gitcvs-migration doc: replace "alice" and "bob" with
 "you" and "www-data"
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Continue the work started in the last commit and change the cast of
characters introduced in cd976f5c526 (Documentation: reorganize
cvs-migration.txt, 2006-12-06) to refer to the "you" and "www-data"
examples the gittutorial documentation now uses.

In addition to the reasons for this in the last commit, this also
brings the gitcvs-migration documentation in line with the example in
the tutorial, which was added by the same author at a around the same
time in 927a503cd07 (New tutorial, 2006-01-22).

Aside from talking about a bare repository here and a non-bare
checkout in the tutorial we use the same paths, and make explicit
reference to the more extended documentation in the tutorial here and
its relevance to this example.

Signed-off-by: Ævar Arnfjörð Bjarmason <avarab@gmail.com>
---
 Documentation/gitcvs-migration.txt | 18 +++++++++++-------
 1 file changed, 11 insertions(+), 7 deletions(-)

diff --git a/Documentation/gitcvs-migration.txt b/Documentation/gitcvs-migration.txt
index 1cd1283d0f8..f2ff379886e 100644
--- a/Documentation/gitcvs-migration.txt
+++ b/Documentation/gitcvs-migration.txt
@@ -86,17 +86,21 @@ possibly created from scratch or from a tarball (see
 linkgit:gittutorial[7]), or imported from an already existing CVS
 repository (see the next section).
 
-Assume your existing repo is at /home/alice/myproject.  Create a new "bare"
-repository (a repository without a working tree) and fetch your project into
-it:
+Assume your existing repo is at /home/you/project.  Create a new "bare"
+repository (a repository withoupt a working tree) and fetch your project into
+it. 
 
 ------------------------------------------------
-$ mkdir /pub/my-repo.git
-$ cd /pub/my-repo.git
+$ mkdir /var/www-data/deployment.git
+$ cd /var/www-data/deployment.git
 $ git --bare init --shared
-$ git --bare fetch /home/alice/myproject master:master
+$ git --bare fetch /home/you/project master:master
 ------------------------------------------------
 
+(See the "Using Git for collaboration" section in
+linkgit:gittutorial[7] for an extended version of this example that
+doesn't use a bare repository.)
+
 Next, give every team member read/write access to this repository.  One
 easy way to do this is to give all the team members ssh access to the
 machine where the repository is hosted.  If you don't want to give them a
@@ -107,7 +111,7 @@ Put all the committers in the same group, and make the repository
 writable by that group:
 
 ------------------------------------------------
-$ chgrp -R $group /pub/my-repo.git
+$ chgrp -R $group /var/www-data/deployment.git
 ------------------------------------------------
 
 Make sure committers have a umask of at most 027, so that the directories
-- 
2.32.0.555.g0268d380f7b

