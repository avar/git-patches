From d7f1c5d37de68f74e6a74317bcc8f95c4b0b7c35 Mon Sep 17 00:00:00 2001
Message-Id: <patch-10.20-d7f1c5d37de-20210328T130922Z-avarab@gmail.com>
In-Reply-To: <cover-00.20-00000000000-20210328T130922Z-avarab@gmail.com>
References: <20210317182054.5986-1-avarab@gmail.com>
	<cover-00.20-00000000000-20210328T130922Z-avarab@gmail.com>
From: =?UTF-8?q?=C3=86var=20Arnfj=C3=B6r=C3=B0=20Bjarmason?=
 <avarab@gmail.com>
Date: Wed, 17 Feb 2021 16:34:06 +0100
Subject: [PATCH v6 10/19] fsck.c: call parse_msg_type() early in
 fsck_set_msg_type()
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

There's no reason to defer the calling of parse_msg_type() until after
we've checked if the "id < 0". This is not a hot codepath, and
parse_msg_type() itself may die on invalid input.

Signed-off-by: Ævar Arnfjörð Bjarmason <avarab@gmail.com>
---
 fsck.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/fsck.c b/fsck.c
index c5a81e4ff05..80365e62842 100644
--- a/fsck.c
+++ b/fsck.c
@@ -201,11 +201,10 @@ void fsck_set_msg_type(struct fsck_options *options,
 		       const char *msg_id_str, const char *msg_type_str)
 {
 	int msg_id = parse_msg_id(msg_id_str);
-	enum fsck_msg_type msg_type;
+	enum fsck_msg_type msg_type = parse_msg_type(msg_type_str);
 
 	if (msg_id < 0)
 		die("Unhandled message id: %s", msg_id_str);
-	msg_type = parse_msg_type(msg_type_str);
 
 	if (msg_type != FSCK_ERROR && msg_id_info[msg_id].msg_type == FSCK_FATAL)
 		die("Cannot demote %s to %s", msg_id_str, msg_type_str);
-- 
2.31.1.445.g087790d4945

