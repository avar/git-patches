From 21f9da06b460896b49af94686beb66c0fcd8a901 Mon Sep 17 00:00:00 2001
Message-Id: <cover-v2-0.2-00000000000-20211006T092946Z-avarab@gmail.com>
In-Reply-To: <cover-0.5-00000000000-20211002T091212Z-avarab@gmail.com>
References: <cover-0.5-00000000000-20211002T091212Z-avarab@gmail.com>
From: Ævar Arnfjörð Bjarmason <avarab@gmail.com>
Date: Wed, 6 Oct 2021 11:29:46 +0200
Subject: [PATCH v2 0/2] *** SUBJECT HERE ***
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

*** BLURB HERE ***

Ævar Arnfjörð Bjarmason (2):
  unpack-trees: don't leak memory in verify_clean_subdirectory()
  built-ins & lib: plug memory leaks with unpack_trees_options_release()

 archive.c                   | 11 ++++++++---
 builtin/am.c                | 17 ++++++++++++-----
 builtin/checkout.c          |  9 +++++++--
 builtin/clone.c             |  1 +
 builtin/commit.c            |  6 +++++-
 builtin/merge.c             |  6 ++++--
 builtin/read-tree.c         | 14 ++++++++++----
 builtin/reset.c             | 13 +++++++++----
 builtin/stash.c             | 14 ++++++++++----
 diff-lib.c                  |  5 ++++-
 sequencer.c                 |  2 ++
 t/t1001-read-tree-m-2way.sh |  2 ++
 unpack-trees.c              |  3 ++-
 13 files changed, 76 insertions(+), 27 deletions(-)

Range-diff against v1:
1:  8a4ca06bce0 < -:  ----------- "lib-diff" tests: make "README" and "COPYING" test data smaller
2:  f07025682e1 < -:  ----------- tests: stop using top-level "README" and "COPYING" files
3:  e91f8ce6984 ! 1:  e5ef1be2aa9 COPYING: remove mention of GPLv3, clarify sub-project COPYING
    @@ Metadata
     Author: Ævar Arnfjörð Bjarmason <avarab@gmail.com>
     
      ## Commit message ##
    -    COPYING: remove mention of GPLv3, clarify sub-project COPYING
    +    unpack-trees: don't leak memory in verify_clean_subdirectory()
     
    -    The COPYING file added in [1] is a product of its era, at the time
    -    discussions around the GPLv3 were quite active. Since then we have had
    -    almost on "GPL v2 or later" notices anywhere.
    +    Fix two different but related memory leaks in
    +    verify_clean_subdirectory(). We leaked both the "pathbuf" if
    +    read_directory() returned non-zero, and we never cleaned up our own
    +    "struct dir_struct" either.
     
    -    Since then[2][3] linux.git has replaced its version of almost the
    -    identical wording with something that's a bit more formal, and which
    -    isn't mostly addressing a hypothetical future GPL v3 migratin. Let's
    -    do the same. Now we:
    +     * "pathbuf": When the read_directory() call followed by the
    +       free(pathbuf) was added in c81935348be (Fix switching to a branch
    +       with D/F when current branch has file D., 2007-03-15) we didn't
    +       bother to free() before we called die().
     
    -    A. Let it suffice to say that things are licensed under GPL v2 unless
    -       explicitly otherwise stated. The new wording is an amalgamation of
    -       the start of Linux's "COPYING" file[4] and the end of our pre-image
    -       first paragraph added in[1].
    +       But when this code was later libified in 203a2fe1170 (Allow callers
    +       of unpack_trees() to handle failure, 2008-02-07) we started to leak
    +       as we returned data to the caller. This fixes that memory leak,
    +       which can be observed under SANITIZE=leak with e.g. the
    +       "t1001-read-tree-m-2way.sh" test.
     
    -    B. Add some brief wording about how the licenses of subdirectories
    -       such as "sha1dc/" and "compat/regex/" should be discovered. This is
    -       also intended to cover future in-tree additions such as the
    -       "reftable" directory[5][6].
    +     * "struct dir_struct": We've leaked the dir_struct ever since this
    +       code was added back in c81935348be.
     
    -    C. Include the same "subject to this COPYING file" wording as
    -       linux.git has used since[7].
    +       When that commit was written there wasn't an equivalent of
    +       dir_clear(). Since it was added in 270be816049 (dir.c: provide
    +       clear_directory() for reclaiming dir_struct memory, 2013-01-06)
    +       we've omitted freeing the memory allocated here.
     
    -    1. 075b845a857 (Add a COPYING notice, making it explicit that the
    -       license is GPLv2., 2005-04-11)
    -    2. torvalds/linux@bf02d491237e (COPYING: use the new text with points
    -       to the license files, 2018-03-23)
    -    3. torvalds/linux@74835c7db032 (COPYING: state that all contributions
    -       really are covered by this file, 2020-02-06)
    -    4. torvalds/linux@88de995ccf48 (COPYING: create a new file with points
    -       to the Kernel license files, 2018-03-23)
    -    5. https://lore.kernel.org/git/2597ddfeae1d9da8695151f62379c85621ad0fcb.1632841817.git.gitgitgadget@gmail.com/
    -    6. https://lore.kernel.org/git/xmqqtui4k1j5.fsf@gitster.g/
    -    7. torvalds/linux@74835c7db032 (COPYING: state that all contributions
    -       really are covered by this file, 2020-02-06)
    +       This memory leak could also be observed under SANITIZE=leak and the
    +       "t1001-read-tree-m-2way.sh" test.
    +
    +    This makes all the test in "t1001-read-tree-m-2way.sh" pass under
    +    "GIT_TEST_PASSING_SANITIZE_LEAK=true", we'd previously die in tests