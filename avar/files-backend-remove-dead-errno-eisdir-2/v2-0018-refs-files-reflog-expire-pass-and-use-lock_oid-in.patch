From 8e068998103d6fce54798f1b10b6a6a02c035733 Mon Sep 17 00:00:00 2001
Message-Id: <patch-18.18-8e068998103-20210716T132600Z-avarab@gmail.com>
In-Reply-To: <cover-00.18-00000000000-20210716T132600Z-avarab@gmail.com>
References: <patch-1.1-de0838fe99-20210714T111351Z-avarab@gmail.com>
	<cover-00.18-00000000000-20210716T132600Z-avarab@gmail.com>
From: =?UTF-8?q?=C3=86var=20Arnfj=C3=B6r=C3=B0=20Bjarmason?=
 <avarab@gmail.com>
Date: Fri, 16 Jul 2021 12:47:02 +0200
Subject: [PATCH v2 18/18] refs/files + reflog expire: pass and use lock_oid in
 "prepare"
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

In the initial implementation of "git reflog" in 4264dc15e19 (git
reflog expire, 2006-12-19) we had this
lookup_commit_reference_gently().

I don't think we've ever found tags that we need to recursively
dereference in reflogs, so this should at least be changed to a
"lookup commit" as I'm doing here, although I can't think of a way
where it mattered in practice.

As shown in the change that introduced roughly the current version of
this code in 03cb91b18cc (reflog --expire-unreachable: special case
entries in "HEAD" reflog, 2010-04-09) we don't actually care about
"tip_commit" being looked up again here, we can use the OID we just
locked, so let's extend the refs API to do that.

This finally clears up a lot of confusion around what OID we are
handling. Before the fixes in earlier commits we'd first look up an
OID with dwim_log(), and then try to acquire a lock on that OID with
lock_ref_oid_basic(), after the ref had possibly moved on, if that
happened we wouldn't do any further processing.

Then as an in-between state in previous commits I've looked up an OID
with dwim_log(), but possibly locked on a different OID. Just like the
deref_tag() case I don't think it mattered in practice, but now with
in-between refactoring we've finally closed the door on that potential
edge case, we now use the OID we locked.

Signed-off-by: Ævar Arnfjörð Bjarmason <avarab@gmail.com>
---
 builtin/reflog.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/builtin/reflog.c b/builtin/reflog.c
index a5480b49321..156fe1e63c4 100644
--- a/builtin/reflog.c
+++ b/builtin/reflog.c
@@ -356,11 +356,11 @@ static void reflog_expiry_prepare(const char *refname,
 	struct commit_list *elem;
 	struct commit *commit = NULL;
 
+	assert(locked_oid);
 	if (!cb->cmd.expire_unreachable || is_head(refname)) {
 		cb->unreachable_expire_kind = UE_HEAD;
 	} else {
-		commit = lookup_commit_reference_gently(the_repository,
-							locked_oid, 1);
+		commit = lookup_commit(the_repository, locked_oid);
 		cb->unreachable_expire_kind = commit ? UE_NORMAL : UE_ALWAYS;
 	}
 
-- 
2.32.0.870.g0e611300719

