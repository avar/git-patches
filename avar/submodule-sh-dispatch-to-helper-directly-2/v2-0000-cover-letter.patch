From 8427d9c2bcc5205500eaef6e87f3d5983bfd193d Mon Sep 17 00:00:00 2001
Message-Id: <cover-v2-00.11-00000000000-20220613T220036Z-avarab@gmail.com>
In-Reply-To: <kl6lzgig5qmc.fsf@chooglen-macbookpro.roam.corp.google.com>
References: <kl6lzgig5qmc.fsf@chooglen-macbookpro.roam.corp.google.com>
From: Ævar Arnfjörð Bjarmason <avarab@gmail.com>
Date: Tue, 14 Jun 2022 00:00:36 +0200
Subject: [PATCH v2 00/11] *** SUBJECT HERE ***
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

*** BLURB HERE ***

Ævar Arnfjörð Bjarmason (11):
  git-submodule.sh: create a "case" dispatch statement
  git-submodule.sh: dispatch "sync" to helper
  git-submodule.sh: dispatch directly to helper
  git-submodule.sh: dispatch "foreach" to helper
  git-submodule.sh: dispatch "update" to helper
  submodule tests: test usage behavior
  git-submodule.sh: don't support top-level "--cached"
  submodule: make it a built-in, remove git-submodule.sh
  submodule: support "--" with no other arguments
  submodule: add a subprocess-less submodule.useBuiltin setting
  submodule: support sub-command-less "--recursive" option

 Documentation/config/submodule.txt |   4 +
 Documentation/git-submodule.txt    |   2 +-
 Makefile                           |   2 +-
 builtin.h                          |   1 +
 builtin/submodule--helper.c        |   3 +-
 builtin/submodule.c                | 187 +++++++++
 ci/run-build-and-tests.sh          |   1 +
 git-submodule.sh                   | 611 -----------------------------
 git.c                              |   1 +
 t/README                           |   4 +
 t/t7400-submodule-basic.sh         |  33 +-
 11 files changed, 234 insertions(+), 615 deletions(-)
 create mode 100644 builtin/submodule.c
 delete mode 100755 git-submodule.sh

Range-diff against v1:
 1:  0e9f13822ef <  -:  ----------- git-submodule.sh: remove unused sanitize_submodule_env()
 2:  8fcd832e58f <  -:  ----------- git-submodule.sh: remove unused $prefix variable
 3:  6c774505ac5 <  -:  ----------- git-submodule.sh: remove unused --super-prefix logic
 4:  f27723aa0a2 <  -:  ----------- git-submodule.sh: normalize parsing of "--branch"
 5:  124c062e3a1 <  -:  ----------- git-submodule.sh: normalize parsing of --cached
 6:  b1ca1183885 <  -:  ----------- submodule--helper: rename "absorb-git-dirs" to "absorbgitdirs"
 7:  9f5cfbb864a !  1:  4d132370e32 git-submodule.sh: create a "case" dispatch statement
    @@ Commit message
     
      ## git-submodule.sh ##
     @@ git-submodule.sh: cmd_sync()
    - 	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper sync ${GIT_QUIET:+--quiet} ${recursive:+--recursive} -- "$@"
    + 	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper sync ${quiet:+--quiet} ${recursive:+--recursive} -- "$@"
      }
      
     -cmd_absorbgitdirs()
 8:  0c1a5063653 <  -:  ----------- submodule--helper: pretend to be "git submodule" in "-h" output
 9:  bd0e4a4f8b8 !  2:  5febe56c07c git-submodule.sh: dispatch "sync" to helper
    @@ Commit message
      ## git-submodule.sh ##
     @@ git-submodule.sh: cmd_status()
      
    - 	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper status ${GIT_QUIET:+--quiet} ${cached:+--cached} ${recursive:+--recursive} -- "$@"
    + 	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper status ${quiet:+--quiet} ${cached:+--cached} ${recursive:+--recursive} -- "$@"
      }
     -#
     -# Sync remote urls for submodules
    @@ git-submodule.sh: cmd_status()
     -	do
     -		case "$1" in
     -		-q|--quiet)
    --			GIT_QUIET=1
    +-			quiet=1
     -			shift
     -			;;
     -		--recursive)
    @@ git-submodule.sh: cmd_status()
     -		esac
     -	done
     -
    --	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper sync ${GIT_QUIET:+--quiet} ${recursive:+--recursive} -- "$@"
    +-	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper sync ${quiet:+--quiet} ${recursive:+--recursive} -- "$@"
     -}
      
      # This loop parses the command line arguments to find the
    @@ git-submodule.sh: case "$command" in
      	;;
     +sync)
     +	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper "$command" \
    -+		${GIT_QUIET:+--quiet} "$@"
    ++		${quiet:+--quiet} "$@"
     +	;;
      *)
      	"cmd_$(echo $command | sed -e s/-/_/g)" "$@"
10:  498a1fd275b !  3:  2e1832f8aac git-submodule.sh: dispatch directly to helper
    @@ Commit message
         Signed-off-by: Ævar Arnfjörð Bjarmason <avarab@gmail.com>
     
      ## git-submodule.sh ##
    -@@ git-submodule.sh: GIT_PROTOCOL_FROM_USER=0
    - export GIT_PROTOCOL_FROM_USER
    +@@ git-submodule.sh: export GIT_PROTOCOL_FROM_USER
      
      command=
    + quiet=
     -branch=
      force=
      reference=
    @@ git-submodule.sh: GIT_PROTOCOL_FROM_USER=0
     -files=
      remote=
      nofetch=
    - update=
    + rebase=
    + merge=
    + checkout=
     -custom_name=
      depth=
      progress=
    @@ git-submodule.sh: jobs=
     -			force=$1
     -			;;
     -		-q|--quiet)
    --			GIT_QUIET=1
    +-			quiet=1
     -			;;
     -		--progress)
     -			progress=1
    @@ git-submodule.sh: jobs=
     -		usage
     -	fi
     -
    --	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper add ${GIT_QUIET:+--quiet} ${force:+--force} ${progress:+"--progress"} ${branch:+--branch "$branch"} ${reference_path:+--reference "$reference_path"} ${dissociate:+--dissociate} ${custom_name:+--name "$custom_name"} ${depth:+"$depth"} -- "$@"
    +-	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper add ${quiet:+--quiet} ${force:+--force} ${progress:+"--progress"} ${branch:+--branch "$branch"} ${reference_path:+--reference "$reference_path"} ${dissociate:+--dissociate} ${custom_name:+--name "$custom_name"} ${depth:+"$depth"} -- "$@"
     -}
      
     -#
    @@ git-submodule.sh: jobs=
      # submodule
      #
     @@ git-submodule.sh: cmd_foreach()
    - 	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper foreach ${GIT_QUIET:+--quiet} ${recursive:+--recursive} -- "$@"
    + 	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper foreach ${quiet:+--quiet} ${recursive:+--recursive} -- "$@"
      }
      
     -#
    @@ git-submodule.sh: cmd_foreach()
     -	do
     -		case "$1" in
     -		-q|--quiet)
    --			GIT_QUIET=1
    +-			quiet=1
     -			;;
     -		--)
     -			shift
    @@ git-submodule.sh: cmd_foreach()
     -		shift
     -	done
     -
    --	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper init ${GIT_QUIET:+--quiet} -- "$@"
    +-	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper init ${quiet:+--quiet} -- "$@"
     -}
     -
     -#
    @@ git-submodule.sh: cmd_foreach()
     -			force=$1
     -			;;
     -		-q|--quiet)
    --			GIT_QUIET=1
    +-			quiet=1
     -			;;
     -		--all)
     -			deinit_all=t
    @@ git-submodule.sh: cmd_foreach()
     -		shift
     -	done
     -
    --	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper deinit ${GIT_QUIET:+--quiet} ${force:+--force} ${deinit_all:+--all} -- "$@"
    +-	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper deinit ${quiet:+--quiet} ${force:+--force} ${deinit_all:+--all} -- "$@"
     -}
     -
      #
    @@ git-submodule.sh: cmd_update()
     -		shift
     -	done
     -
    --	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper set-branch ${GIT_QUIET:+--quiet} ${branch:+--branch "$branch"} ${default:+--default} -- "$@"
    +-	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper set-branch ${quiet:+--quiet} ${branch:+--branch "$branch"} ${default:+--default} -- "$@"
     -}
     -
     -#
    @@ git-submodule.sh: cmd_update()
     -	do
     -		case "$1" in
     -		-q|--quiet)
    --			GIT_QUIET=1
    +-			quiet=1
     -			;;
     -		--)
     -			shift
    @@ git-submodule.sh: cmd_update()
     -		shift
     -	done
     -
    --	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper set-url ${GIT_QUIET:+--quiet} -- "$@"
    +-	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper set-url ${quiet:+--quiet} -- "$@"
     -}
     -
     -#
    @@ git-submodule.sh: cmd_update()
     -	do
     -		case "$1" in
     -		-q|--quiet)
    --			GIT_QUIET=1
    +-			quiet=1
     -			;;
     -		--cached)
     -			cached=1
    @@ git-submodule.sh: cmd_update()
     -		shift
     -	done
     -
    --	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper status ${GIT_QUIET:+--quiet} ${cached:+--cached} ${recursive:+--recursive} -- "$@"
    +-	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper status ${quiet:+--quiet} ${cached:+--cached} ${recursive:+--recursive} -- "$@"
     -}
     -
      # This loop parses the command line arguments to find the
    @@ git-submodule.sh: case "$command" in
      	;;
     -sync)
     -	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper "$command" \
    --		${GIT_QUIET:+--quiet} "$@"
    +-		${quiet:+--quiet} "$@"
     +foreach | update)
     +	"cmd_$command" "$@"
      	;;
    @@ git-submodule.sh: case "$command" in
     -	"cmd_$(echo $command | sed -e s/-/_/g)" "$@"
     +add | init | deinit | set-branch | set-url | status | summary | sync)
     +	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper "$command" \
    -+		${GIT_QUIET:+--quiet} ${cached:+--cached} "$@"
    ++		${quiet:+--quiet} ${cached:+--cached} "$@"
      	;;
      esac
11:  625320e13b9 !  4:  89cb62696cd git-submodule.sh: dispatch "foreach" to helper
    @@ git-submodule.sh: jobs=
     -	do
     -		case "$1" in
     -		-q|--quiet)
    --			GIT_QUIET=1
    +-			quiet=1
     -			;;
     -		--recursive)
     -			recursive=1
    @@ git-submodule.sh: jobs=
     -		shift
     -	done
     -
    --	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper foreach ${GIT_QUIET:+--quiet} ${recursive:+--recursive} -- "$@"
    +-	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper foreach ${quiet:+--quiet} ${recursive:+--recursive} -- "$@"
     -}
     -
      #
    @@ git-submodule.sh: case "$command" in
     -add | init | deinit | set-branch | set-url | status | summary | sync)
     +add | foreach | init | deinit | set-branch | set-url | status | summary | sync)
      	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper "$command" \
    - 		${GIT_QUIET:+--quiet} ${cached:+--cached} "$@"
    + 		${quiet:+--quiet} ${cached:+--cached} "$@"
      	;;
12:  57b9df29ea6 <  -:  ----------- submodule--helper: have --require-init imply --init
13:  20db979a094 <  -:  ----------- submodule--helper: understand --checkout, --merge and --rebase synonyms
14:  1cb40a5f42e <  -:  ----------- git-submodule doc: document the -v" option to "update"
15:  0c388eed1d1 <  -:  ----------- submodule--helper: understand -v option for "update"
16:  08abadda7c3 !  5:  d41a6ba9175 git-submodule.sh: dispatch "update" to helper
    @@ Commit message
     
         Signed-off-by: Ævar Arnfjörð Bjarmason <avarab@gmail.com>
     
    - ## Documentation/git-submodule.txt ##
    -@@ Documentation/git-submodule.txt: SYNOPSIS
    - 'git submodule' [--quiet] status [--cached] [--recursive] [--] [<path>...]
    - 'git submodule' [--quiet] init [--] [<path>...]
    - 'git submodule' [--quiet] deinit [-f|--force] (--all|[--] <path>...)
    --'git submodule' [--quiet] update [-v] [<options>] [--] [<path>...]
    -+'git submodule' [--quiet] update [-v | --verbose] [<options>] [--] [<path>...]
    - 'git submodule' [--quiet] set-branch [<options>] [--] <path>
    - 'git submodule' [--quiet] set-url [--] <path> <newurl>
    - 'git submodule' [--quiet] summary [<options>] [--] [<path>...]
    -@@ Documentation/git-submodule.txt: If you really want to remove a submodule from the repository and commit
    - that use linkgit:git-rm[1] instead. See linkgit:gitsubmodules[7] for removal
    - options.
    - 
    --update [-v] [--init] [--remote] [-N|--no-fetch] [--[no-]recommend-shallow] [-f|--force] [--checkout|--rebase|--merge] [--reference <repository>] [--depth <depth>] [--recursive] [--jobs <n>] [--[no-]single-branch] [--filter <filter spec>] [--] [<path>...]::
    -+update [-v | --verbose] [--init] [--remote] [-N|--no-fetch] [--[no-]recommend-shallow] [-f|--force] [--checkout|--rebase|--merge] [--reference <repository>] [--depth <depth>] [--recursive] [--jobs <n>] [--[no-]single-branch] [--filter <filter spec>] [--] [<path>...]::
    - +
    - --
    - Update the registered submodules to match what the superproject
    -@@ Documentation/git-submodule.txt: OPTIONS
    - 	Only print error messages.
    - 
    - -v::
    -+--verbose::
    - 	Don't be quiet. This option is only valid for the update command.
    - 
    - --progress::
    -
      ## git-submodule.sh ##
    -@@ git-submodule.sh: GIT_PROTOCOL_FROM_USER=0
    - export GIT_PROTOCOL_FROM_USER
    +@@ git-submodule.sh: export GIT_PROTOCOL_FROM_USER
      
      command=
    + quiet=
     -force=
     -reference=
      cached=
    @@ git-submodule.sh: GIT_PROTOCOL_FROM_USER=0
     -	do
     -		case "$1" in
     -		-q|--quiet)
    --			GIT_QUIET=1
    --			;;
    --		-v)
    --			unset GIT_QUIET
    +-			quiet=1
     -			;;
     -		--progress)
     -			progress=1
    @@ git-submodule.sh: GIT_PROTOCOL_FROM_USER=0
     -	done
     -
     -	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper update \
    --		${GIT_QUIET:+--quiet} \
    +-		${quiet:+--quiet} \
     -		${force:+--force} \
     -		${progress:+"--progress"} \
     -		${remote:+--remote} \
    @@ git-submodule.sh: absorbgitdirs)
      update)
     -	cmd_update "$@"
     +	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper "$command" \
    -+		${GIT_QUIET:+--quiet} ${wt_prefix:+--prefix "$wt_prefix"} "$@"
    ++		${quiet:+--quiet} ${wt_prefix:+--prefix "$wt_prefix"} "$@"
      	;;
      add | foreach | init | deinit | set-branch | set-url | status | summary | sync)
      	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper "$command" \
17:  59a72296967 <  -:  ----------- git-submodule.sh: use "$quiet", not "$GIT_QUIET"
18:  c5796878f0b <  -:  ----------- git-submodule.sh: simplify parsing loop
 -:  ----------- >  6:  137283943ff submodule tests: test usage behavior
 -:  ----------- >  7:  0965fda4052 git-submodule.sh: don't support top-level "--cached"
19:  1423950de08 !  8:  4b5746382bd submodule: make it a built-in, remove git-submodule.sh
    @@ Commit message
         t0012-help.sh (which invokes all built-ins manually with "-h"). Let's
         leave it for now, eventually we'll consolidate the two.
     
    +    This changes the behavior for "-h" and "--", see the altered
    +    tests. Returning 129 instead of 0 and 1 for "-h" and "--" respectively
    +    is a concession to basic sanity. As noted the "--" edge case doesn't
    +    make sense, but let's address that in a follow-up commit.
    +
         Signed-off-by: Ævar Arnfjörð Bjarmason <avarab@gmail.com>
     
      ## Makefile ##
    @@ builtin/submodule.c (new)
     +};
     +
     +static void setup_helper_args(int argc, const char **argv, const char *prefix,
    -+			      int quiet, int cached, struct strvec *args)
    ++			      int quiet, int cached, struct strvec *args,
    ++			      const struct option *options)
     +{
     +	const char *cmd;
     +	int do_quiet_cache = 1;
    @@ builtin/submodule.c (new)
     +		return;
     +	}
     +
    ++	/* Did we get --cached with a command? */
    ++	if (cached)
    ++		usage_msg_optf(_("'%s' option is only supported with explicit 'status'"),
    ++			       git_submodule_usage, options, "--cached");
    ++
    ++
     +	/* Either a valid command, or submodule--helper will barf! */
     +	cmd = argv[0];
     +	strvec_push(args, cmd);
     +	argv++;
     +	argc--;
     +
    ++	/*
    ++	  * This is stupid, but don't support "[--]" to
    ++	 * subcommand-less "git-submodule" for now.
    ++	 */
    ++	if (!strcmp(cmd, "--") || !strcmp(cmd, "--end-of-options"))
    ++		usage_msg_optf(_("need explicit sub-command name to delimit with '%s'"),
    ++			       git_submodule_usage, options, cmd);
    ++
     +	/* Options that need to go before user-supplied options */
     +	if (!strcmp(cmd, "absorbgitdirs"))
     +		do_quiet_cache = 0;
    @@ builtin/submodule.c (new)
     +	int ret;
     +
     +	argc = parse_options(argc, argv, prefix, options, git_submodule_usage,
    -+			     PARSE_OPT_STOP_AT_NON_OPTION);
    ++			     PARSE_OPT_STOP_AT_NON_OPTION | PARSE_OPT_KEEP_DASHDASH);
     +
     +	/*
     +	 * Tell the rest of git that any URLs we get don't come
     +	 * directly from the user, so it can apply policy as appropriate.
     +	 */
    -+	strvec_push(&cp.env_array, "GIT_PROTOCOL_FROM_USER=0");
    ++	strvec_push(&cp.env, "GIT_PROTOCOL_FROM_USER=0");
     +	setup_helper_args(argc, argv, prefix, opt_quiet, opt_cached,
    -+			  &cp.args);
    ++			  &cp.args, options);
     +
     +	cp.git_cmd = 1;
     +	cp.no_stdin = 0; /* for git submodule foreach */
    @@ git-submodule.sh (deleted)
     -   or: $dashless [--quiet] status [--cached] [--recursive] [--] [<path>...]
     -   or: $dashless [--quiet] init [--] [<path>...]
     -   or: $dashless [--quiet] deinit [-f|--force] (--all| [--] <path>...)
    --   or: $dashless [--quiet] update [-v] [--init [--filter=<filter-spec>]] [--remote] [-N|--no-fetch] [-f|--force] [--checkout|--merge|--rebase] [--[no-]recommend-shallow] [--reference <repository>] [--recursive] [--[no-]single-branch] [--] [<path>...]
    +-   or: $dashless [--quiet] update [--init [--filter=<filter-spec>]] [--remote] [-N|--no-fetch] [-f|--force] [--checkout|--merge|--rebase] [--[no-]recommend-shallow] [--reference <repository>] [--recursive] [--[no-]single-branch] [--] [<path>...]
     -   or: $dashless [--quiet] set-branch (--default|--branch <branch>) [--] <path>
     -   or: $dashless [--quiet] set-url [--] <path> <newurl>
     -   or: $dashless [--quiet] summary [--cached|--files] [--summary-limit <n>] [commit] [--] [<path>...]
    @@ git-submodule.sh (deleted)
     -GIT_PROTOCOL_FROM_USER=0
     -export GIT_PROTOCOL_FROM_USER
     -
    +-command=
     -quiet=
     -cached=
     -
    --while test $# != 0
    +-while test $# != 0 && test -z "$command"
     -do
     -	case "$1" in
    +-	add | foreach | init | deinit | update | set-branch | set-url | status | summary | sync | absorbgitdirs)
    +-		command=$1
    +-		;;
     -	-q|--quiet)
    --		quiet=1 &&
    --		shift
    +-		quiet=1
     -		;;
     -	--cached)
    --		cached=1 &&
    --		shift
    +-		if test -z "$command"
    +-		then
    +-			cached=1 &&
    +-			shift &&
    +-			break
    +-		else
    +-			usage
    +-		fi
    +-		;;
    +-	--)
    +-		break
    +-		;;
    +-	-*)
    +-		usage
     -		;;
     -	*)
     -		break
     -		;;
     -	esac
    +-	shift
     -done
     -
     -# No command word defaults to "status"
    --command=
    --if test $# = 0
    +-if test -z "$command"
     -then
    +-    if test $# = 0
    +-    then
     -	command=status
    --else
    --	case "$1" in
    --	add | foreach | init | deinit | update | set-branch | set-url | status | summary | sync | absorbgitdirs)
    --		command=$1 &&
    --		shift
    --		;;
    --	*)
    --		usage
    --	esac
    +-    else
    +-	usage
    +-    fi
     -fi
     -
     -case "$command" in
    @@ git-submodule.sh (deleted)
     -	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper "$command" \
     -		${quiet:+--quiet} ${wt_prefix:+--prefix "$wt_prefix"} "$@"
     -	;;
    --*)
    +-add | foreach | init | deinit | set-branch | set-url | status | summary | sync)
     -	git ${wt_prefix:+-C "$wt_prefix"} submodule--helper "$command" \
     -		${quiet:+--quiet} ${cached:+--cached} "$@"
     -	;;
    @@ git.c: static struct cmd_struct commands[] = {
      	{ "submodule--helper", cmd_submodule__helper, RUN_SETUP | SUPPORT_SUPER_PREFIX | NO_PARSEOPT },
      	{ "switch", cmd_switch, RUN_SETUP | NEED_WORK_TREE },
      	{ "symbolic-ref", cmd_symbolic_ref, RUN_SETUP },
    +
    + ## t/t7400-submodule-basic.sh ##
    +@@ t/t7400-submodule-basic.sh: export GIT_TEST_DEFAULT_INITIAL_BRANCH_NAME
    + . ./test-lib.sh
    + 
    + test_expect_success 'submodule usage: -h' '
    +-	git submodule -h >out 2>err &&
    ++	test_expect_code 129 git submodule -h >out 2>err &&
    + 	grep "^usage: git submodule" out &&
    + 	test_must_be_empty err
    + '
    + 
    + test_expect_success 'submodule usage: --recursive' '
    +-	test_expect_code 1 git submodule --recursive >out 2>err &&
    +-	grep "^usage: git submodule" err &&
    +-	test_must_be_empty out
    ++	test_expect_code 129 git submodule --recursive
    + '
    + 
    + test_expect_success 'submodule usage: status --' '
    +-	test_expect_code 1 git submodule -- &&
    +-	test_expect_code 1 git submodule --end-of-options
    ++	test_expect_code 129 git submodule -- &&
    ++	test_expect_code 129 git submodule --end-of-options
    + '
    + 
    + for opt in '--quiet'
    +@@ t/t7400-submodule-basic.sh: do
    + 	test_expect_success "submodule usage: status $opt" '
    + 		git submodule $opt &&
    + 		git submodule status $opt &&
    +-		test_expect_code 1 git submodule $opt status >out 2>err &&
    ++		test_expect_code 129 git submodule $opt status >out 2>err &&
    + 		grep "^usage: git submodule" err &&
    + 		test_must_be_empty out
    + 	'
 -:  ----------- >  9:  1aa78eec9a9 submodule: support "--" with no other arguments
20:  b2aaad5c008 ! 10:  e876c3db6da submodule: add a subprocess-less submodule.useBuiltin setting
    @@ builtin/submodule.c
     +#include "config.h"
      
      #define BUILTIN_SUBMODULE_USAGE \
    - 	"git submodule [--quiet] [--cached]"
    + 	"git submodule [--quiet] [--cached] [--]"
     @@ builtin/submodule.c: static void setup_helper_args(int argc, const char **argv, const char *prefix,
      	strvec_pushv(args, argv);
      }
    @@ builtin/submodule.c: int cmd_submodule(int argc, const char **argv, const char *
      	 * Tell the rest of git that any URLs we get don't come
      	 * directly from the user, so it can apply policy as appropriate.
      	 */
    --	strvec_push(&cp.env_array, "GIT_PROTOCOL_FROM_USER=0");
    +-	strvec_push(&cp.env, "GIT_PROTOCOL_FROM_USER=0");
     +	if (use_builtin)
     +		xsetenv("GIT_PROTOCOL_FROM_USER", "0", 1);
     +	else
    -+		strvec_push(&cp.env_array, "GIT_PROTOCOL_FROM_USER=0");
    ++		strvec_push(&cp.env, "GIT_PROTOCOL_FROM_USER=0");
     +
      	setup_helper_args(argc, argv, prefix, opt_quiet, opt_cached,
    --			  &cp.args);
    -+			  use_builtin ? &args : &cp.args);
    +-			  &cp.args, options);
    ++			  use_builtin ? &args : &cp.args, options);
     +
     +	if (use_builtin) {
     +		ret = cmd_submodule__helper(args.nr, args.v, prefix);
 -:  ----------- > 11:  8427d9c2bcc submodule: support sub-command-less "--recursive" option
-- 
2.36.1.1239.gfba91521d90

