From cb69bfa0d0dee32ccc54b2457f81a9e2f04e2cf8 Mon Sep 17 00:00:00 2001
Message-Id: <RFC-patch-2.4-cb69bfa0d0d-20220711T110019Z-avarab@gmail.com>
In-Reply-To: <RFC-cover-0.4-00000000000-20220711T110019Z-avarab@gmail.com>
References: <YstJl+5BPyR5RWnR@tapette.crustytoothpaste.net>
	<RFC-cover-0.4-00000000000-20220711T110019Z-avarab@gmail.com>
From: =?UTF-8?q?=C3=86var=20Arnfj=C3=B6r=C3=B0=20Bjarmason?=
 <avarab@gmail.com>
Date: Mon, 11 Jul 2022 11:39:22 +0200
Subject: [RFC PATCH 2/4] .clang-format: Add a BitFieldColonSpacing=None rule
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Formatting bitfield as "unsigned foo:1" is the usual style in this
project, not "unsigned foo : 1", which clang-format will use by
default.

Before & after this change running "make style-all-diff-apply" will
yield:

	582 files changed, 32029 insertions(+), 29794 deletions(-)
	579 files changed, 32065 insertions(+), 29818 deletions(-)

However this highlights a major limitation in this approach, because
clang-format v12 or newer is required for this rule, but that version
was only released in April 2021.

This change therefore cuts off anyone using an older clang-format. We
could decide to dynamically detect the version, and only supply this
as a --style="" rule on the command-line for older versions, but then
users on older versions would get different results.

So what do we do about that? Declare that "make style" is what mortal
users should run, but that we're going to run "make style-all-diff-ok"
on some blessed version of clang-format?

Signed-off-by: Ævar Arnfjörð Bjarmason <avarab@gmail.com>
---
 .clang-format | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/.clang-format b/.clang-format
index 3f536c49f24..87398d24d4f 100644
--- a/.clang-format
+++ b/.clang-format
@@ -144,6 +144,10 @@ SpacesInParentheses: false
 # int a[5];    not    int a[ 5 ];
 SpacesInSquareBrackets: false
 
+# Use "unsigned bf:2;", not "bf : 2" or whatever. Requires
+# clang-format 12.
+BitFieldColonSpacing: None
+
 # Insert a space after '{' and before '}' in struct initializers
 Cpp11BracedListStyle: false
 
-- 
2.37.0.913.g189dca38629

