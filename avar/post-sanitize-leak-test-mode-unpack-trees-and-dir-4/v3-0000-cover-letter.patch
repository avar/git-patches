From 4923315a9783e149b4ae67bd1a449872401fce8d Mon Sep 17 00:00:00 2001
Message-Id: <cover-v3-0.3-00000000000-20211013T132112Z-avarab@gmail.com>
In-Reply-To: <cover-v2-0.3-00000000000-20211007T094019Z-avarab@gmail.com>
References: <cover-v2-0.3-00000000000-20211007T094019Z-avarab@gmail.com>
From: Ævar Arnfjörð Bjarmason <avarab@gmail.com>
Date: Wed, 13 Oct 2021 15:21:12 +0200
Subject: [PATCH v3 0/3] *** SUBJECT HERE ***
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

*** BLURB HERE ***

Ævar Arnfjörð Bjarmason (3):
  unpack-trees: don't leak memory in verify_clean_subdirectory()
  sequencer: add a "goto cleanup" to do_reset()
  sequencer: fix a memory leak in do_reset()

 sequencer.c                 | 36 +++++++++++++++---------------------
 t/t1001-read-tree-m-2way.sh |  2 ++
 unpack-trees.c              |  3 ++-
 3 files changed, 19 insertions(+), 22 deletions(-)

Range-diff against v2:
 1:  81772da1ac2 <  -:  ----------- Makefile: add SANITIZE=leak flag to GIT-BUILD-OPTIONS
 2:  975854b4621 <  -:  ----------- tests: add a test mode for SANITIZE=leak, run it in CI
 3:  bbb278bca71 <  -:  ----------- submodule-config.h: remove unused SUBMODULE_INIT macro
 4:  bf5a3f3490b <  -:  ----------- *.[ch] *_INIT macros: use { 0 } for a "zero out" idiom
 5:  f3f7a1d1153 <  -:  ----------- *.h _INIT macros: don't specify fields equal to 0
 6:  8c69ad5cdbe <  -:  ----------- *.h: move some *_INIT to designated initializers
 7:  7de11e3bdf4 <  -:  ----------- cbtree.h: define cb_init() in terms of CBTREE_INIT
 8:  a88622077cc <  -:  ----------- daemon.c: refactor hostinfo_init() to HOSTINFO_INIT macro
 9:  212b1b5efd6 <  -:  ----------- builtin/blame.c: refactor commit_info_init() to COMMIT_INFO_INIT macro
10:  f7d1ae2c98d <  -:  ----------- urlmatch.[ch]: add and use URLMATCH_CONFIG_INIT
11:  6f0b0aed07d <  -:  ----------- builtin/remote.c: add and use a REF_STATES_INIT
12:  0fb62cd641e <  -:  ----------- builtin/remote.c: add and use SHOW_INFO_INIT
13:  4fc779f114e <  -:  ----------- t2500: add various tests for nuking untracked files
14:  dc7098d3a4b <  -:  ----------- checkout, read-tree: fix leak of unpack_trees_options.dir
15:  b7924ff0015 <  -:  ----------- read-tree, merge-recursive: overwrite ignored files by default
16:  42c15a1adea <  -:  ----------- unpack-trees: introduce preserve_ignored to unpack_trees_options
17:  bfa0e284732 <  -:  ----------- unpack-trees: make dir an internal-only struct
18:  3e12a5a4aa8 <  -:  ----------- Remove ignored files by default when they are in the way
19:  e627c7d683c <  -:  ----------- Change unpack_trees' 'reset' flag into an enum
20:  859604b206b <  -:  ----------- unpack-trees: avoid nuking untracked dir in way of unmerged file
21:  7f69643c5c9 <  -:  ----------- unpack-trees: avoid nuking untracked dir in way of locally deleted file
22:  751c341f128 <  -:  ----------- Comment important codepaths regarding nuking untracked files/dirs
23:  fce181acc64 <  -:  ----------- Documentation: call out commands that nuke untracked files/directories
24:  e5ef1be2aa9 =  1:  0ab1e74f50d unpack-trees: don't leak memory in verify_clean_subdirectory()
25:  1d5f5e9fff0 !  2:  ea871d506ad sequencer: add a "goto cleanup" to do_reset()
    @@ Commit message
         unconditionally free desc.buffer, it won't be initialized on the first
         couple of "goto"'s.
     
    -    There are three earlier "return"'s in this function that I'm not
    -    bothering to covert, those don't need to rollback anything, or free
    -    any resources, so let's leave, even though they could safely "goto
    -    cleanup" as well.
    +    There are three earlier "return"'s in this function which should
    +    probably be made to use this new "cleanup" too, per [1] it looks like
    +    they're leaving behind stale locks. But let's not try to fix every
    +    potential bug here now, I'm just trying to narrowly plug a memory
    +    leak.
    +
    +    1. CABPp-BH=3DP-dXRCphY53-3eZd1TU8h5GY_M12nnbEGm-UYB9Q@mail.gmail.com
     
         Signed-off-by: Ævar Arnfjörð Bjarmason <avarab@gmail.com>
     
26:  66ae63db8fd !  3:  4923315a978 sequencer: fix a memory leak in do_reset()
    @@ Commit message
         setup_unpack_trees_porcelain() without a corresponding call to
         clear_unpack_trees_porcelain().
     
    +    This introduces a change in behavior in that we now start calling
    +    clear_unpack_trees_porcelain() even without having called the
    +    setup_unpack_trees_porcelain(). That's OK, that clear function, like
    +    most others, will accept a zero'd out struct.
    +
         This inches us closer to passing various tests in
         "t34*.sh" (e.g. "t3434-rebase-i18n.sh"), but because they have so many
         other memory leaks in revisions.c this doesn't make any test file or
-- 
2.33.0.1569.gd2dc77f7abf

